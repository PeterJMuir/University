pagesize 0 embed on;

BEGIN
DBMS_OUTPUT.PUT_LINE ('Local Events - For all your Event Organising Needs');
END;
/

DECLARE
myString VARCHAR2(20) := 'Today''s date is: ';
today DATE;
BEGIN
today := SYSDATE;
DBMS_OUTPUT.PUT_LINE(myString || today);
END;
/

CREATE OR REPLACE PROCEDURE sponsorDetails(
p_ID IN SPONSORS.BUSINESSID%TYPE) AS

	v_BusName SPONSORS.BUSINESSNAME%TYPE;
	v_BusAdd SPONSORS.STREETADDRESS%TYPE;
	v_BusSub SPONSORS.SUBURB%TYPE;
	v_BusPost SPONSORS.POSTCODE%TYPE;
BEGIN
	SELECT BUSINESSNAME, STREETADDRESS, SUBURB, POSTCODE
	INTO v_BusName, v_BusAdd, v_BusSub, v_BusPost
	FROM SPONSORS
	WHERE p_ID = BUSINESSID;
	
	DBMS_OUTPUT.PUT_LINE('Sponsor Details');
	DBMS_OUTPUT.PUT_LINE('---------------');
	DBMS_OUTPUT.PUT_LINE('Business Name: ' || v_BusName);
	DBMS_OUTPUT.PUT_LINE('Address: ' || v_BusAdd || ', ' || v_BusSub || ' ' || v_BusPost);
END sponsorDetails;
/

execute sponsorDetails('SP0001');

CREATE OR REPLACE PROCEDURE promoterDetails AS
CURSOR c_promoter IS
	SELECT * FROM PROMOTERS;
	
BEGIN
	DBMS_OUTPUT.PUT_LINE('PROMOTER DETAILS');
	DBMS_OUTPUT.PUT_LINE('----------------');
	FOR V IN c_promoter LOOP
		DBMS_OUTPUT.PUT_LINE('ID: ' || V.PROMOTERID || CHR(10) || 'BUSINESS NAME: ' || V.PROMOTERBUSINESSNAME);
		DBMS_OUTPUT.PUT_LINE('ADDRESS: ' || V.STREETADDRESS || ', ' || V.SUBURB || ' ' || V.POSTCODE);
		DBMS_OUTPUT.PUT_LINE('PHONE NUMBER: ' || V.PROMOTERPHONENO || CHR(10) || 'FAX NUMBER: ' || V.PROMOTERFAXNO);
		DBMS_OUTPUT.PUT_LINE('CONTACT PERSON: ' || V.CONTACTPERSON || CHR(10));
	END LOOP;
END promoterDetails;
/

execute promoterDetails;

CREATE OR REPLACE PROCEDURE eventTimesOnDay(
p_date IN DATE) AS

CURSOR c_eT IS
	SELECT E.EVENTNAME, EV.BOOKINGDATE
	FROM EVENTS E, EVENTVENUES EV
	WHERE E.EVENTID = EV.EVENTID AND TO_CHAR(p_date, 'DD-MON-YYYY') = TO_CHAR(EV.BOOKINGDATE, 'DD-MON-YYYY');
BEGIN
	FOR V IN c_eT LOOP
		DBMS_OUTPUT.PUT_LINE('Events on ' || TO_CHAR(V.BOOKINGDATE, 'Day') || ', ' || TO_CHAR(V.BOOKINGDATE, 'MONTH DD') || ', ' || TO_CHAR(V.BOOKINGDATE, 'YYYY') || ':');
		DBMS_OUTPUT.PUT_LINE('Event Name: ' || V.EVENTNAME || CHR(10) || 'Time: ' || TO_CHAR(V.BOOKINGDATE, 'HH:MI am'));
	END LOOP;

END eventTimesOnDay;
/

EXECUTE eventTimesOnDay('09-Oct-2007');

CREATE OR REPLACE PROCEDURE ticketsRemaining(
p_ID IN EVENTS.EVENTID%TYPE) AS

CURSOR c_tickets IS
	SELECT TICKETDATE, COUNT(*) AS E_NUM
	FROM TICKETS
	WHERE EVENTID = p_ID
	GROUP BY TICKETDATE
	ORDER BY TICKETDATE;
v_vCap NUMBER;
v_tRem NUMBER;

BEGIN
	
	SELECT venueCapacityRequired INTO v_vCap
	FROM EVENTS
	WHERE EVENTID = p_ID;
	
	DBMS_OUTPUT.PUT_LINE('Tickets remaining for event id:' || p_ID);
	FOR V IN c_tickets LOOP
		DBMS_OUTPUT.PUT_LINE('Date and time: ' || TO_CHAR(V.TICKETDATE, 'DD-MON-YYYY') || ', ' || TO_CHAR(V.TICKETDATE, 'HH:MI am'));
		DBMS_OUTPUT.PUT_LINE('Number of tickets remaining ' || (v_vCap - V.E_NUM) || CHR(10));
	END LOOP;

END ticketsRemaining;
/

EXECUTE ticketsRemaining('E00013');

CREATE OR REPLACE PROCEDURE lostClients AS
CURSOR c_cList IS
	SELECT DISTINCT CLIENTCOMPANYNAME, CLIENTCONTACTFIRSTNAME, CLIENTCONTACTLASTNAME, STREETADDRESS, SUBURB, POSTCODE
	FROM CLIENTS C, EVENTS E, EVENTVENUES EV 
	WHERE C.CLIENTID = E.CLIENTID AND E.EVENTID = EV.EVENTID
	AND months_between(SYSDATE, bookingDate) > 12
	AND ... NOT IN ...